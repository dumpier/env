version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      app_net:
        ipv4_address: 172.24.3.2
    ports:
      - 80:80
    volumes:
      - ./containers/nginx/conf.d:/etc/nginx/conf.d
      - ./code:/var/www/html/code
    depends_on:
      - node

  node:
    #image: node:latest
    build: ./containers/node
    container_name: node
    environment:
      - NODE_ENV=development
    volumes:
      - ./code/node:/usr/src/app
    networks:
      app_net:
        ipv4_address: 172.24.3.11
    ports:
      - 3000:3000
    #working_dir: /usr/src/app
    tty: true
    #command: "nodejs /usr/src/app/app.js"
    #command: "nodemon /usr/src/app/app.js"
    #command: bash -c "npm install && npm install nodemon -g && nodemon /usr/src/app/app.js"

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ../containers/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - ../containers/mongo/configdb:/data/configdb
      - /vagrant/docker-data/mongo/db:/data/db
    networks:
      app_net:
        ipv4_address: 172.24.3.20

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
      app_net:
        ipv4_address: 172.24.3.21
    depends_on:
      - mongo

networks:
  app_net:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.24.3.0/24
